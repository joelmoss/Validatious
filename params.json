{"name":"Validatious","body":"Validatious -- A collection of delicious Rails validators\r\n=========================================================\r\n\r\nNo matter what app you are working on, Rails never seems to include all the\r\nvalidations you need, and you end having to repeat yourself over and over by\r\nwriting regex validations and/or custom validators.\r\n\r\nValidatious solves this problem by packaging up all these often used, but\r\nmissing Rails validators, into one single RubyGem.\r\n\r\n\r\n## INSTALLATION\r\n\r\nThe best way to install Validatious is with RubyGems:\r\n\r\n    $ [sudo] gem install validatious\r\n\r\nIf you're installing from source, you can use [Bundler][bundler] to pick up all the\r\ngems:\r\n\r\n    $ bundle install # ([more info](http://gembundler.com/bundle_install.html))\r\n\r\n[bundler]: http://gembundler.com/\r\n\r\n\r\n## USAGE\r\n\r\nAll the validators in Validatious are designed to work with Rails 3 and up, and\r\ntake advantage of ActiveModel::Validator. This means that they are all used in the\r\nusual Rails way:\r\n\r\n    validates :url, :url => true\r\n    \r\nThe old Rails 2 style validations are also supported:\r\n\r\n    validates_url_format_of :url\r\n    \r\n    \r\n## Validations\r\n\r\nValidatious currently provides the following validators:\r\n\r\n\r\n### URL\r\n\r\nThis validates the format of a URL, ensuring that the attribute conforms to the\r\ncorrect format of a URL.\r\n\r\n    validates :url, :url => true  \r\n\r\nor\r\n\r\n    validates_url_format_of :url\r\n    \r\n    \r\n### Email\r\n\r\nThis validates the format of an email address, ensuring that the attribute conforms\r\nto the correct format of an email address.\r\n\r\n    validates :email, :email => true  \r\n\r\nor\r\n\r\n    validates_email_format_of :email\r\n    \r\n\r\n### Postal Code\r\n\r\nThis validates the format of a postal code address, ensuring that the attribute conforms\r\nto the correct format as specified by the given country (default: US).\r\n\r\n    validates :zip, :postal_code => true\r\n    \r\nor specify a different country\r\n    \r\n    validates :zip, :postal_code => { :country => 'UK' }\r\n    \r\nor validate for several countries\r\n    \r\n    validates :zip, :postal_code => { :country => [ 'US', 'CA' ] }\r\n\r\nor\r\n\r\n    validates_postal_code_format_of :zip\r\n    \r\n    \r\n### Text Content\r\n\r\nExtracted from [validates_text_content](https://github.com/aarongough/validates_text_content), this validates the content of a text attribute, to determine\r\nwhether or not a block of English text meets certain quality standards.\r\n\r\n    validates :comment, :text_content => true  \r\n\r\nor\r\n\r\n    validates_text_content_of :comment\r\n    \r\n#### Examples\r\n\r\n - Rejects:\r\n  - \"this comment has absolutely no capitalization.\"\r\n  - \"This comment has no type of punctuation\"\r\n  - \"Fdkjd dk dkkjhd kjdhkjd kjdhdhdl alkasla lka alk\"\r\n  - \"THIS COMMENT IS ALL IN UPPERCASE. ME NO WANT!\"\r\n  - \"Thiscommenthasabsolutelynospacesthereisnowaythisisgood.\"\r\n  - \"THIS COMMENT is MORE THAN 80% CAPITALS.\"\r\n  - \"THIS pERSON hAS tHEIR cAPS-lOCK oN.\"\r\n     \r\n - Accepts:\r\n  - \"This is a very simple test comment.\"\r\n  - \"Supercalifragilisticexpialadocious: a super long word!\"\r\n  - \"How many words can I think of that don't contain an 'e'?\"\r\n\r\n\r\n## CONTRIBUTE\r\n\r\nIf you'd like to hack on Validatious, start by forking my repo on GitHub:\r\n\r\nhttp://github.com/joelmoss/validatious\r\n\r\nTo get all of the dependencies, install the gem first. The best way to get\r\nyour changes merged back into core is as follows:\r\n\r\n1. Clone down your fork\r\n1. Create a thoughtfully named topic branch to contain your change\r\n1. Hack away\r\n1. Add tests and make sure everything still passes by running `rake`\r\n1. If you are adding new functionality, document it in the README\r\n1. Do not change the version number, I will do that on my end\r\n1. If necessary, rebase your commits into logical chunks, without errors\r\n1. Push the branch up to GitHub\r\n1. Send a pull request to the joelmoss/validatious project.","tagline":"A collection of delicious Rails validators","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}